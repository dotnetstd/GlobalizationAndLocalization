@inject SignInManager<IdentityUser> SignInManager
@inject IdentityLocalizationService IdentityLocalizer
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<nav class="navbar navbar-light">
    <ul class="mr-auto navbar-nav">
        <li class="nav-item @ManageNavPages.IndexNavClass(ViewContext)"><a class="nav-link" asp-page="./Index">@IdentityLocalizer.GetLocalizedHtmlString("PROFILE")</a></li>
        <li class="nav-item @ManageNavPages.ChangePasswordNavClass(ViewContext)"><a class="nav-link" id="change-password" asp-page="./ChangePassword">@IdentityLocalizer.GetLocalizedHtmlString("PASSWORD")</a></li>
        @if (hasExternalLogins)
        {
            <li class="nav-item @ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a class="nav-link" id="external-login" asp-page="./ExternalLogins">@IdentityLocalizer.GetLocalizedHtmlString("EXTERNAL_LOGINS")</a></li>
        }
        <li class="nav-item @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a class="nav-link" asp-page="./TwoFactorAuthentication">@IdentityLocalizer.GetLocalizedHtmlString("2FA")</a></li>
        <li class="nav-item @ManageNavPages.PersonalDataNavClass(ViewContext)"><a class="nav-link" asp-page="./PersonalData">@IdentityLocalizer.GetLocalizedHtmlString("PERSONAL_DATA")</a></li>
    </ul>
</nav>